// SPDX-License-Identifier: MIT

pragma solidity ^0.8.19;

import "forge-std/Test.sol";
import "../src/"; // Import the contract you want to test

contract ExploitTest is Test {
    YourContract yourContract;
    uint256 deadline;

    function setUp() public {
        yourContract = new YourContract();
        deadline = block.timestamp + 60 minutes; // Set a deadline
    }

    function test_DeadlineSet() public {
        assertGt(deadline, block.timestamp); // Deadline should be greater than current time
    }

    function testFail_DeadlinePassed() public {
        deadline = block.timestamp - 1; // Set deadline to past
    }

    function test_CannotExecuteAfterDeadline() public {
        vm.expectRevert(stdError.arithmeticError);
        if(block.timestamp > deadline) {
            // Replace with the actual function that should not be executable after the deadline in the contract.
            yourContract.executeFunction(); // This should fail if deadline has passed
        }
    }
}
